{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nexport function SyncZoom({\n  setZoomLevel,\n  setMapZoom,\n  concerts\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    const handleZoom = () => {\n      const z = map.getZoom();\n      setMapZoom(z);\n      if (z < 3) setZoomLevel(\"continent\");else if (z < 6) setZoomLevel(\"country\");else if (z < 10) setZoomLevel(\"city\");else setZoomLevel(\"city\");\n    };\n\n    // ðŸ‘‡ Fit the map to show all concerts (only once when concerts change)\n    if (concerts && concerts.length > 0) {\n      const bounds = L.latLngBounds(concerts.map(c => [c.lat, c.lng]));\n      map.fitBounds(bounds, {\n        padding: [200, 200]\n      });\n    }\n    map.on(\"zoomend\", handleZoom);\n    handleZoom();\n    return () => {\n      map.off(\"zoomend\", handleZoom);\n    };\n  }, [map, concerts, setZoomLevel, setMapZoom]);\n  return null;\n}\n_s(SyncZoom, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = SyncZoom;\nvar _c;\n$RefreshReg$(_c, \"SyncZoom\");","map":{"version":3,"names":["useEffect","useMap","L","SyncZoom","setZoomLevel","setMapZoom","concerts","_s","map","handleZoom","z","getZoom","length","bounds","latLngBounds","c","lat","lng","fitBounds","padding","on","off","_c","$RefreshReg$"],"sources":["C:/Users/nhgiang/Documents/personal/resonify/frontend/src/components/MapView/SyncZoom.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nexport function SyncZoom({ setZoomLevel, setMapZoom, concerts }) {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    const handleZoom = () => {\r\n      const z = map.getZoom();\r\n      setMapZoom(z);\r\n\r\n      if (z < 3) setZoomLevel(\"continent\");\r\n      else if (z < 6) setZoomLevel(\"country\");\r\n      else if (z < 10) setZoomLevel(\"city\");\r\n      else setZoomLevel(\"city\");\r\n    };\r\n\r\n    // ðŸ‘‡ Fit the map to show all concerts (only once when concerts change)\r\n    if (concerts && concerts.length > 0) {\r\n      const bounds = L.latLngBounds(concerts.map(c => [c.lat, c.lng]));\r\n      map.fitBounds(bounds, { padding: [200, 200]});\r\n    }\r\n\r\n    map.on(\"zoomend\", handleZoom);\r\n    handleZoom();\r\n\r\n    return () => {\r\n      map.off(\"zoomend\", handleZoom);\r\n    };\r\n  }, [map, concerts, setZoomLevel, setMapZoom]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,SAAS;AAEvB,OAAO,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,CAAC,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC;MACvBN,UAAU,CAACK,CAAC,CAAC;MAEb,IAAIA,CAAC,GAAG,CAAC,EAAEN,YAAY,CAAC,WAAW,CAAC,CAAC,KAChC,IAAIM,CAAC,GAAG,CAAC,EAAEN,YAAY,CAAC,SAAS,CAAC,CAAC,KACnC,IAAIM,CAAC,GAAG,EAAE,EAAEN,YAAY,CAAC,MAAM,CAAC,CAAC,KACjCA,YAAY,CAAC,MAAM,CAAC;IAC3B,CAAC;;IAED;IACA,IAAIE,QAAQ,IAAIA,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;MACnC,MAAMC,MAAM,GAAGX,CAAC,CAACY,YAAY,CAACR,QAAQ,CAACE,GAAG,CAACO,CAAC,IAAI,CAACA,CAAC,CAACC,GAAG,EAAED,CAAC,CAACE,GAAG,CAAC,CAAC,CAAC;MAChET,GAAG,CAACU,SAAS,CAACL,MAAM,EAAE;QAAEM,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG;MAAC,CAAC,CAAC;IAC/C;IAEAX,GAAG,CAACY,EAAE,CAAC,SAAS,EAAEX,UAAU,CAAC;IAC7BA,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,GAAG,CAACa,GAAG,CAAC,SAAS,EAAEZ,UAAU,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACD,GAAG,EAAEF,QAAQ,EAAEF,YAAY,EAAEC,UAAU,CAAC,CAAC;EAE7C,OAAO,IAAI;AACb;AAACE,EAAA,CA7BeJ,QAAQ;EAAA,QACVF,MAAM;AAAA;AAAAqB,EAAA,GADJnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}